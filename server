#!/bin/sh

set -ue

source_dir="$HOME/cisecraft"
server_dir=/tmp/cisecraft
server_jar_url="https://meta.fabricmc.net/v2/versions/loader/1.21.1/0.16.3/1.0.1/server/jar"
server_jar="fabric-1.21.1-0.16.3-1.0.1.jar"
java_dist_url="https://download.java.net/java/GA/jdk22.0.2/c9ecb94cd31b495da20a27d4581645e8/9/GPL/openjdk-22.0.2_linux-x64_bin.tar.gz"
java_dir="jdk-22.0.2"

server_args=

err() { printf >&2 'error: %s\n' "$*"; }
warn() { print >&2 'warning: %s\n' "$*"; }
echo() { printf '%s\n' "$*"; }

usage() {
  cat >&2 <<EOF
Usage:
  server [<option>...]

  Launch the CISECraft Minecraft server.

Options:
  --init    initialize server and exit
  --help    show this help and exit
EOF
}

for opt; do
  case $opt in
    --init) server_args='--initSettings' ;;
    --help) usage; exit 0 ;;
    *) err "invalid option: $opt"; exit 2 ;;
  esac
done

# this is for JNA
export XDG_CACHE_HOME="$XDG_RUNTIME_DIR/cache"

# no need to check if we own the server directory
# something will fail eventually

mkdir -p "$server_dir"
cd "$server_dir"

# download Java if necessary
if [ ! -f "$java_dir/bin/java" ]; then
  rm -rf "$java_dir"
  echo "Downloading Java..."
  curl -Lf -o "java.tar.gz" "$java_dist_url"
  echo "Extracting Java..."
  tar -xf "java.tar.gz"
  rm "java.tar.gz"
fi

# download server JAR if necessary
if [ ! -f "$server_jar" ]; then
  echo "Downloading server JAR..."
  curl -Lf -o "$server_jar" "$server_jar_url"
fi

# create mod directory
mkdir -p mods

mods='
https://cdn.modrinth.com/data/P7dR8mSH/versions/gQS3JbZO/fabric-api-0.103.0+1.21.1.jar
https://cdn.modrinth.com/data/t6XBQ2xn/versions/30ak0J3Q/tick-stasis-1.1.0.jar
https://cdn.modrinth.com/data/FJI3H6YI/versions/Yds9fTAP/convenient-mobgriefing-2.1.2.jar
'

# prune old mods
for file in mods/*.jar; do
  [ -e "$file" ] || continue
  for mod in $mods; do
    mod_file="mods/${mod##*/}"
    if [ "$file" = "$mod_file" ]; then
      continue 2
    fi
  done
  echo "Removing $file"
  rm "$file"
done

# install new mods
for mod in $mods; do
  mod_file="mods/${mod##*/}"
  if [ ! -e "mods/${mod##*/}" ]; then
    echo "Downloading $mod_file"
    curl -LfsS -o "$mod_file" "$mod"
  fi
done

# agree to EULA
if [ ! -e eula.txt ]; then
  echo "Generating eula.txt..."
  echo "eula=true" > eula.txt
fi

# link/copy persistent files
ln -sfT "$source_dir/world" world
cp -t . \
  "$source_dir/ops.json" \
  "$source_dir/server.properties" \
  "$source_dir/usercache.json"

echo "Starting server..."
exec "$java_dir/bin/java" \
  -Dlog4j.configurationFile="$source_dir/log4j.xml" \
  -jar "$server_jar" --nogui $server_args
